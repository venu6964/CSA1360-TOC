#include <stdio.h>
#include <stdlib.h>

#define MAX_STATES 10

typedef struct {
    int transitions[MAX_STATES][MAX_STATES];
    int epsilon[MAX_STATES][MAX_STATES];
} NFA;

void epsilonClosure(NFA *nfa, int state, int *closure) {
    closure[state] = 1;
    for (int i = 0; i < MAX_STATES; i++) {
        if (nfa->epsilon[state][i] && !closure[i]) {
            epsilonClosure(nfa, i, closure);
        }
    }
}

void findEpsilonClosure(NFA *nfa) {
    for (int state = 0; state < MAX_STATES; state++) {
        int closure[MAX_STATES] = {0};
        epsilonClosure(nfa, state, closure);
        printf("Epsilon-closure of state %d: ", state);
        for (int i = 0; i < MAX_STATES; i++) {
            if (closure[i]) {
                printf("%d ", i);
            }
        }
        printf("\n");
    }
}

int main() {
    NFA nfa = {0};
    int numStates, numTransitions, state1, state2;

    printf("Enter number of states: ");
    scanf("%d", &numStates);

    printf("Enter number of epsilon transitions: ");
    scanf("%d", &numTransitions);
    for (int i = 0; i < numTransitions; i++) {
        printf("Enter transition (format: state1 state2): ");
        scanf("%d %d", &
